import pandas as pd
import glob

def get_df(malware_type):
    # Strategy found here: https://stackoverflow.com/questions/20906474/import-multiple-csv-files-into-pandas-and-concatenate-into-one-dataframe#21232849
    print("Importing {} data...".format(malware_type))
    path ='malware_dataset/{}'.format(malware_type)
    allFiles = glob.glob(path + "/*/*.csv")
    frame = pd.DataFrame()
    list_ = []
    for file_ in allFiles:
        df = pd.read_csv(file_,index_col=None, header=0)
        list_.append(df)
    frame = pd.concat(list_)
    
    # Rename dataframe and change index of samples
    df = frame
    df.index = df['Flow ID']
    del df['Flow ID']
    
    # Remove the spaces in front of some of the column names
    print('Renaming columns with spaces...')
    cols = {}
    for name in df.columns:
        if name[0] is ' ':
            cols[name] = name[1:]
    df.rename(cols, axis=1, inplace=True, errors='raise')
    
    # 1) Maximum flow packet length F 14 -> Flow IAT Max
    # 2) Minimum flow packet length F 14 -> Flow IAT Min
    # 3) Backward variance data bytes F 15 -> Bwd Packet Length Std (Can't find the variance, so using this instead since it is related)
    # 4) Flow FIN F 17 -> FIN Flag Count
    # 5) Flow forward bytes F 18 -> Fwd IAT Total
    # 6) Flow backward bytes F 19 -> Bwd IAT Total
    # 7) Maximum Idle F 20 -> Idle Max
    # 8) Initial window forward F 21 -> Init_Win_bytes_forward
    # 9) Minimum segment size forward F 23 -> min_seg_size_forward
    
    cols_to_keep = ['Flow IAT Max',
                    'Flow IAT Min',
                    'Bwd Packet Length Std', 
                    'FIN Flag Count', 
                    'Fwd IAT Total', 
                    'Bwd IAT Total',
                    'Idle Max',
                    'Init_Win_bytes_forward',
                    'min_seg_size_forward',
                    'Label']
    print('Dropping unnecessary columns...')
    df.drop(columns=[col for col in df.columns if col not in cols_to_keep], inplace=True, errors='raise')
    df.dropna(inplace=True)
    
    print('{} cleaned\n\tCreating csv...'.format(malware_type))
    df.to_csv('malware_dataset/{}_cleaned.csv'.format(malware_type))
    return df
    
def create_large_df(types):
    df_list = []
    for typ in types:
        df_typ = get_df(typ)
        df_list.append(df_typ)
    return pd.concat(df_list)
if __name__ == '__main__':
    types = ['Adware', 'Benign', 'Scareware', 'Ransomware', 'SMSmalware']
    df = create_large_df(types)
    print('Writing full dataset to csv...')
    df.to_csv('malware_dataset/complete_dataset_cleaned.csv')


